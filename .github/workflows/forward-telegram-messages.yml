name: Forward Telegram Messages

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour
  workflow_dispatch:

jobs:
  forward_messages:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install requests beautifulsoup4

      - name: Forward messages
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          EMAIL: ${{ secrets.EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          TO_EMAIL: ${{ secrets.TO_EMAIL }}
        run: |
          python - <<EOF
          import os
          import smtplib
          from email.mime.multipart import MIMEMultipart
          from email.mime.text import MIMEText
          import requests
          from bs4 import BeautifulSoup
          import hashlib

          def send_email(subject, body, to_email):
              from_email = os.getenv('EMAIL')
              email_password = os.getenv('EMAIL_PASSWORD')
              
              if not from_email or not email_password:
                  print('Email credentials are not set in the environment variables.')
                  return
              
              # Create the email message
              msg = MIMEMultipart()
              msg['From'] = from_email
              msg['To'] = to_email
              msg['Subject'] = subject
              msg.attach(MIMEText(body, 'plain'))
              
              try:
                  # Set up the SMTP server
                  server = smtplib.SMTP('smtp.gmail.com', 587)
                  server.starttls()
                  server.login(from_email, email_password)
                  
                  # Send the email
                  server.send_message(msg)
                  server.quit()
                  print(f'Email sent successfully to {to_email}')
              except Exception as e:
                  print(f'Failed to send email: {e}')

          # URL of the public Telegram channel
          telegram_channel_url = 'https://t.me/s/Rasoolkgfx_3'

          # Fetch the latest messages from the public URL
          response = requests.get(telegram_channel_url)
          soup = BeautifulSoup(response.text, 'html.parser')

          # Extract the latest message (assuming it's the last <div> with class "tgme_widget_message_text")
          latest_message_divs = soup.find_all('div', class_='tgme_widget_message_text')
          if latest_message_divs:
              latest_message = latest_message_divs[-1].get_text(strip=True)
              latest_message_hash = hashlib.md5(latest_message.encode()).hexdigest()

              # Read the last message hash from file
              last_message_hash_file = 'last_message_hash.txt'
              if os.path.exists(last_message_hash_file):
                  with open(last_message_hash_file, 'r') as file:
                      last_message_hash = file.read().strip()
              else:
                  last_message_hash = ''

              if latest_message_hash != last_message_hash:
                  # Update the last message hash file
                  with open(last_message_hash_file, 'w') as file:
                      file.write(latest_message_hash)

                  # Send the message to the target Telegram channel
                  bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
                  chat_id = os.getenv('TELEGRAM_CHAT_ID')
                  send_message_url = f'https://api.telegram.org/bot{bot_token}/sendMessage'

                  response = requests.post(send_message_url, data={'chat_id': chat_id, 'text': latest_message})
                  if response.status_code != 200:
                      print(f'Failed to send message: {response.text}')
                  else:
                      print('Message sent successfully to Telegram')

                  # Send the latest message to the specified email
                  to_email = os.getenv('TO_EMAIL')
                  send_email('Latest Telegram Message', latest_message, to_email)
              else:
                  print('No new messages to forward')
          else:
              print('No messages found')
          EOF

      - name: Commit updated hash
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add last_message_hash.txt
          git commit -m 'Update last message hash'
          git push
